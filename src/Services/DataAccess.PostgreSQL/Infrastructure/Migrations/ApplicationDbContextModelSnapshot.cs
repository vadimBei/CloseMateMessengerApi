// <auto-generated />
using System;
using DataAccess.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.PostgreSQL.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.ChatCompletion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ChatCompletions", (string)null);
                });

            modelBuilder.Entity("Entities.Models.ChatCompletionMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ChatCompletionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IntegrationId")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChatCompletionId");

                    b.ToTable("ChatCompletionMessages", (string)null);
                });

            modelBuilder.Entity("Entities.Models.ChatCompletionUsage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ChatCompletionId")
                        .HasColumnType("bigint");

                    b.Property<int>("CompletionTokens")
                        .HasColumnType("integer");

                    b.Property<int>("PromptTokens")
                        .HasColumnType("integer");

                    b.Property<int>("TotalTokens")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChatCompletionId")
                        .IsUnique();

                    b.ToTable("ChatCompletionUsages", (string)null);
                });

            modelBuilder.Entity("Entities.Models.ChatCompletionMessage", b =>
                {
                    b.HasOne("Entities.Models.ChatCompletion", "ChatCompletion")
                        .WithMany("Messages")
                        .HasForeignKey("ChatCompletionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatCompletion");
                });

            modelBuilder.Entity("Entities.Models.ChatCompletionUsage", b =>
                {
                    b.HasOne("Entities.Models.ChatCompletion", "ChatCompletion")
                        .WithOne("Usage")
                        .HasForeignKey("Entities.Models.ChatCompletionUsage", "ChatCompletionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatCompletion");
                });

            modelBuilder.Entity("Entities.Models.ChatCompletion", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Usage");
                });
#pragma warning restore 612, 618
        }
    }
}
